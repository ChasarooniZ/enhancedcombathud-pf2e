name: Release Creation

on:
  release:
    types: [published]

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - uses: pnpm/action-setup@v2
        with:
          version: 8
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - run: pnpm install --frozen-lockfile
      - run: pnpm run --production build

      # get part of the tag after the `v`
      - name: Extract tag version number
        id: get_version
        uses: battila7/get-version-action@v2

      - run: >
          jq '
          .version = "https://github.com/${{github.repository}}" |
          .url = "https://github.com/${{github.repository}}" |
          .manifest = "https://github.com/${{github.repository}}/releases/latest/download/module.json" |
          .download = "https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/module.zip"
          ' module-template.json > module.json

      # Create a zip file with all files required by the module to add to the release
      - run: zip -r ./module.zip module.json LICENSE styles/ dist/ templates/ languages/ packs/ -x "packs/*/_source"

      # Create a release for this specific version
      - name: Update Release with Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true # Set this to false if you want to prevent updating existing releases
          name: ${{ github.event.release.name }}
          draft: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./module.json, ./module.zip"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
